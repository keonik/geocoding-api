version: "3.8"

services:
  postgres:
    build:
      context: database
      dockerfile: Dockerfile
    container_name: geocoding_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-geocoding_db}
      POSTGRES_USER: ${DB_USER:-geocoding_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password_change_me}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./georef-united-states-of-america-zc-point.csv:/docker-entrypoint-initdb.d/georef-united-states-of-america-zc-point.csv:ro
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DB_USER:-geocoding_user} -d ${DB_NAME:-geocoding_db}",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  geocoding-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: geocoding_api
    restart: unless-stopped
    environment:
      # Database Configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER:-geocoding_user}
      DB_PASSWORD: ${DB_PASSWORD:-secure_password_change_me}
      DB_NAME: ${DB_NAME:-geocoding_db}
      DB_SSLMODE: ${DB_SSLMODE:-disable}
      DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}?sslmode=${DB_SSLMODE}

      # Application Configuration
      PORT: ${API_PORT:-8080}
      GO_ENV: ${GO_ENV:-production}

      # Security (set these in your Coolify environment)
      JWT_SECRET: ${JWT_SECRET:-change_this_in_production}
      API_SECRET_KEY: ${API_SECRET_KEY:-change_this_in_production}

      # Optional: External API configurations
      RATE_LIMIT_PER_MINUTE: ${RATE_LIMIT_PER_MINUTE:-60}
      MAX_CONNECTIONS: ${MAX_CONNECTIONS:-100}
    ports:
      - "${API_EXTERNAL_PORT:-8080}:${API_PORT:-8080}"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./georef-united-states-of-america-zc-point.csv:/app/georef-united-states-of-america-zc-point.csv:ro
      - ./static:/app/static:ro
      - ./docs:/app/docs:ro
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:${API_PORT:-8080}/api/v1/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres_data:
    driver: local
